# Name for my workflow
name: Build for IIS Server
# Trigger workflow when code is pushed to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  # Build job
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20 # Specify Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the project
      - name: Build the project
        run: npm run build

      # Step 5: Upload production-ready build files as artifacts
      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./dist

  # Deployment job
  # Deployment job
  deploy:
    name: Deploy to IIS Server
    needs: build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'

    steps:
      # Step 1: Download the artifact
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./dist

      # Step 2: Deploy to IIS Server
      - name: Deploy to IIS Server
        shell: powershell
        run: |
          Write-Output "Starting deployment to IIS Server..."

          # Ensure the WebAdministration module is loaded
          if (-not (Get-Module -Name WebAdministration)) {
              Write-Output "Loading WebAdministration module..."
              Import-Module WebAdministration
          }

          # Define paths
          $sourcePath = "$env:GITHUB_WORKSPACE\dist"
          $iisPath = "C:\IISServer\dist"

          # Debug: Output paths being used
          Write-Output "Source Path: $sourcePath"
          Write-Output "Destination Path: $iisPath"

          # Check if source path exists
          if (-Not (Test-Path -Path $sourcePath)) {
              Write-Output "ERROR: Source path does not exist. Deployment aborted."
              Exit 1
          }


          # Debug: Display contents of source path
          Write-Output "Contents of Source Path:"
          Get-ChildItem -Recurse $sourcePath | Write-Output

          # Clear the old files in the IIS folder using admin privileges
          Write-Output "Clearing old files in IIS path..."
          # Remove-Item -Path "$iisPath\*" -Recurse
          Get-ChildItem -Path "$iisPath\*" -Recurse | Where-Object { $_.Name -ne "web.config" } | Remove-Item -Recurse -Force

          # Debug: Confirm old files are removed
          if ((Get-ChildItem -Path $iisPath).Count -gt 1) {
              Write-Output "ERROR: Failed to clear old files in IIS path."
              Exit 1
          }

          # Copy new files to the IIS folder using admin privileges
          Write-Output "Copying files from $sourcePath to $iisPath..."
          Copy-Item -Path "$sourcePath\*" -Destination "$iisPath" -Recurse



          # Debug: Verify that files were copied successfully
          Write-Output "Contents of Destination Path:"
          $destinationFiles = Get-ChildItem -Recurse "$iisPath"
          if ($destinationFiles.Count -eq 0) {
              Write-Output "ERROR: No files copied to destination path. Deployment aborted."
              Exit 1
          } else {
              $destinationFiles | Write-Output
          }


          # Restart IIS services to apply changes using admin privileges
          Write-Output "Restarting IIS services..."
          Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -Command Restart-Service W3SVC" -Verb RunAs

          Write-Output "Deployment to IIS Server completed successfully!"

# # Name for my workflow
# name: Deploy to IIS Server

# # When my workflow file trigger
# on:
#   push:
#     # Whenever anything push into main branch. This Workflow fill will run
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: windows-latest

#     steps:
#       # Step 1: Checkout code
#       - name: Checkout repository
#         # already github provide us built in command to checkout repo
#         uses: actions/checkout@v3

#       # Step 2: Set up Node.js
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20 # Ensure the version is 17 or above

#       # Step 3: Install dependencies
#       - name: Install dependencies
#         run: npm install

#       # Step 4: Build the project
#       - name: Build the project
#         run: npm run build

#       # Step 5: upload build file as artifacts
#       - name: upload production ready build files
#         uses: actions/upload-artifact@v3
#         with:
#           name: production-files
#           path: ./build

#   deply:
#     name: Deploy
#     needs: build
#     runs-on: windows-latest
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Download artifact
#       - uses: actions/download-artifact@v3
#         with:
#           name: production-files
#           path: ./build

#        # Deploy to IIS Server using PowerShell
#       - name: Deploy to IIS Server
#         run: |
#           Write-Output "Starting deployment to IIS Server..."

#          # Define paths (modify as needed)
#           $sourcePath = "$env:GITHUB_WORKSPACE\build"
#           $iisPath = "C:\IIS_Server\dist"

#          # Stop IIS site
#           Write-Output "Stopping IIS site..."
#           Import-Module WebAdministration
#           Stop-WebAppPool -Name "Official Website"

#          # Clear old files
#           Write-Output "Clearing old files..."
#           Remove-Item -Recurse -Force "$iisPath\*"

#          # Copy new files
#           Write-Output "Copying new files..."
#           Copy-Item -Recurse -Force "$sourcePath\*" "$iisPath"

#          # Start IIS site
#           Write-Output "Starting IIS site..."
#           Start-WebAppPool -Name "Official Website"

#           Write-Output "Deployment to IIS Server completed successfully!"

#       # - name: Deploy to iis server
#       #   uses:
#       #   with:
#       #     github_token: ${{ secrets.ACTION_TOKEN_FOR_MSSPL_WEBSITE }}
#       #     publish_dir: ./build
